$flexbox-gap-default: 10px !default;

.flex {
  display: flex;

  &.inline {
    display: inline-flex;
  }

  &.fullsize {
    width: 100vw;
    height: 100vh;
  }

  &.column {
    flex-direction: column;
    &.reverse {
      flex-direction: column-reverse;
    }
  }

  &.reverse {
    flex-direction: row-reverse;
  }

  &.wrap {
    flex-wrap: wrap;
    &-reverse {
      flex-wrap: wrap-reverse;
    }
  }

  // &.center {
  //   > * {
  //     margin: auto;
  //   }
  // }

  $flex: flex-start flex-end center;
  $space: space-around space-between;
  $stretch: stretch;
  $justifyContent: join($flex, space-around space-between);
  $alignContent: join($justifyContent, $stretch);
  $alignItems: join($flex, $stretch baseline);

  // align items in x-axis for flex=row (default) and in y-axis when flex=column mode
  @each $mod in $justifyContent {
    &.justify-#{$mod} {
      justify-content: $mod;
    }
  }

  // opposite to .justify-*, but has a bit different values
  @each $mod in $alignItems {
    &.align-#{$mod} {
      align-items: $mod;
    }
  }
  @each $mod in $alignContent {
    &.content-#{$mod} {
      align-content: $mod;
    }
  }

  &.center {
    justify-content: center;
    align-items: center;
  }

  // gaps
  &.gaps {
    $gap: var(--flex-gap, #{$flexbox-gap-default});
    &.column {
      &:not(.reverse) > :not(:last-child) {
        margin-bottom: $gap;
      }
      &.reverse > :not(:last-child) {
        margin-top: $gap;
      }
    }
    &:not(.column) {
      &:not(.reverse) > :not(:last-child) {
        margin-right: $gap;
      }
      &.reverse > :not(:last-child) {
        margin-left: $gap;
      }
    }
  }

  // children
  > * {
    &.left {
      margin-left: 0;
      margin-right: auto;
    }
    &.right {
      margin-right: 0;
      margin-left: auto;
    }
    &.top {
      margin-top: 0;
      margin-bottom: auto;
    }
    &.bottom {
      margin-bottom: 0;
      margin-top: auto;
    }

    @each $mod in $alignItems {
      &.self-#{$mod} {
        align-self: $mod;
      }
    }
  }

  // firefox fix: don't allow to flex-children go beyond its flex container
  > {
    input,
    textarea {
      min-width: 0;
    }
  }
}
